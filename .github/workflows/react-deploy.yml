name: React CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  MCP_SERVER_URL: http://192.168.111.200:8080
  DEPLOY_PATH: /var/deployment/react-app
  NODE_VERSION: '20'

jobs:
  test:
    name: Test React Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'mcp-cicd-pipeline/package-lock.json'

      - name: Install dependencies
        working-directory: ./mcp-cicd-pipeline
        run: npm ci

      - name: Run linter
        working-directory: ./mcp-cicd-pipeline
        run: npm run lint

      - name: Run tests
        working-directory: ./mcp-cicd-pipeline
        run: npm test -- --run

  build:
    name: Build React Application
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'mcp-cicd-pipeline/package-lock.json'

      - name: Install dependencies
        working-directory: ./mcp-cicd-pipeline
        run: npm ci

      - name: Build application
        working-directory: ./mcp-cicd-pipeline
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: mcp-cicd-pipeline/dist/

  deploy:
    name: Deploy to MCP Server
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: ./dist

      - name: Prepare deployment package
        run: |
          echo "üì¶ Preparing deployment package..."
          ls -la dist/
          echo "‚úÖ Build artifacts are ready for deployment"
          echo "üìä Build size: $(du -sh dist/ | cut -f1)"
          echo "üìÅ Files: $(find dist/ -type f | wc -l) files"
          
      - name: Simulate deployment
        run: |
          echo "üöÄ Deployment simulation (GitHub Actions environment)"
          echo "‚ÑπÔ∏è  In production, this would deploy to: ${{ env.MCP_SERVER_URL }}"
          echo "üìÇ Target path: ${{ env.DEPLOY_PATH }}"
          echo "‚úÖ Deployment preparation completed"
          echo "üéØ Ready for production deployment via local scripts or manual process"