# nginx Security Headers Configuration for MCP Server
# File: /etc/nginx/snippets/security-headers.conf

# Strict Transport Security (HSTS)
# Forces HTTPS connections for 1 year, includes subdomains, allows preloading
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

# Content Security Policy (CSP)
# Comprehensive policy to prevent XSS and injection attacks
add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com; img-src 'self' data: https: blob:; font-src 'self' data: https://fonts.gstatic.com https://cdnjs.cloudflare.com; connect-src 'self' https: wss:; media-src 'self' data: blob:; object-src 'none'; child-src 'self' blob:; frame-ancestors 'none'; form-action 'self'; base-uri 'self'; manifest-src 'self'" always;

# X-Frame-Options
# Prevents the page from being displayed in a frame (clickjacking protection)
add_header X-Frame-Options "DENY" always;

# X-Content-Type-Options
# Prevents MIME sniffing and forces declared content types
add_header X-Content-Type-Options "nosniff" always;

# X-XSS-Protection
# Enables XSS filtering in browsers (legacy but still useful)
add_header X-XSS-Protection "1; mode=block" always;

# Referrer Policy
# Controls how much referrer information is sent with requests
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Permissions Policy (formerly Feature Policy)
# Controls which browser features can be used
add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=(), ambient-light-sensor=(), autoplay=(), battery=(), display-capture=(), document-domain=(), encrypted-media=(), fullscreen=(), gamepad=(), midi=(), picture-in-picture=(), publickey-credentials-get=(), screen-wake-lock=(), web-share=()" always;

# X-Permitted-Cross-Domain-Policies
# Controls cross-domain policies for Flash and PDF
add_header X-Permitted-Cross-Domain-Policies "none" always;

# X-DNS-Prefetch-Control
# Controls DNS prefetching to improve privacy
add_header X-DNS-Prefetch-Control "off" always;

# Expect-CT
# Certificate Transparency enforcement
add_header Expect-CT "max-age=86400, enforce" always;

# Cross-Origin Embedder Policy
# Enables cross-origin isolation
add_header Cross-Origin-Embedder-Policy "require-corp" always;

# Cross-Origin Opener Policy
# Prevents cross-origin access to window objects
add_header Cross-Origin-Opener-Policy "same-origin" always;

# Cross-Origin Resource Policy
# Controls cross-origin resource sharing
add_header Cross-Origin-Resource-Policy "same-origin" always;

# Cache Control for security-sensitive pages
# Prevents caching of sensitive content
location ~* \.(html|htm)$ {
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;
}

# Remove sensitive headers that might leak information
more_clear_headers 'Server';
more_clear_headers 'X-Powered-By';
more_clear_headers 'X-AspNet-Version';
more_clear_headers 'X-AspNetMvc-Version';

# Server tokens (hide nginx version)
server_tokens off;

# Additional security configurations for specific locations
location /admin {
    # Extra security for admin areas
    add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive" always;
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    
    # IP restriction example (uncomment and configure as needed)
    # allow 192.168.1.0/24;
    # allow 10.0.0.0/8;
    # deny all;
}

location /api {
    # API-specific security headers
    add_header X-API-Version "1.0" always;
    add_header X-RateLimit-Limit "100" always;
    
    # CORS headers for API (configure as needed)
    add_header Access-Control-Allow-Origin "https://192.168.111.200" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
    add_header Access-Control-Max-Age "86400" always;
    
    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        return 204;
    }
}

# Security for static assets
location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    # Allow longer caching for static assets
    expires 1y;
    add_header Cache-Control "public, immutable";
    
    # CORS for fonts and assets
    add_header Access-Control-Allow-Origin "*";
}
