services:
  mcp-server:
    build:
      context: ./mcp-cicd-pipeline/docker-enhanced/mcp-server
      dockerfile: Dockerfile
    container_name: mcp-server
    ports:
      - "${MCP_SERVER_PORT:-8080}:${MCP_SERVER_PORT:-8080}"
    volumes:
      - ./logs:/var/log/mcp
      - ./deployment:/var/deployment
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - mcp-network
    restart: always
    # Security enhancements
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
      - DAC_OVERRIDE  # For Docker socket access
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
        labels: "service=mcp-server,environment=production"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MCP_SERVER_PORT:-8080}"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
    environment:
      - MCP_SERVER_PORT=${MCP_SERVER_PORT:-8080}
      - NODE_ENV=${NODE_ENV:-production}
      - LOG_LEVEL=${LOG_LEVEL:-info}

  nginx:
    build:
      context: ./mcp-cicd-pipeline/docker-enhanced/nginx
      dockerfile: Dockerfile
    container_name: nginx-proxy
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/html:/usr/share/nginx/html
      - ./logs/nginx:/var/log/nginx
    networks:
      - mcp-network
    restart: always
    # Simplified security settings for compatibility
    security_opt:
      - no-new-privileges:true
    # Basic resource limits
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=nginx,environment=production"
    depends_on:
      mcp-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
    environment:
      - NGINX_WORKER_PROCESSES=${NGINX_WORKER_PROCESSES:-auto}
      - NGINX_WORKER_CONNECTIONS=${NGINX_WORKER_CONNECTIONS:-1024}

  react-app:
    build:
      context: ./mcp-cicd-pipeline
      dockerfile: ./docker-enhanced/react-app/Dockerfile
    container_name: react-app
    ports:
      - "${REACT_PORT:-3000}:${VITE_PORT:-3000}"
    volumes:
      - ./mcp-cicd-pipeline:/app
      - node_modules:/app/node_modules
      - /app/node_modules  # Prevent node_modules from being overwritten
    networks:
      - mcp-network
    restart: always
    # Security enhancements
    user: "1001:1001"  # non-root user
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=react-app,environment=development"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${VITE_PORT:-3000}/"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 45s
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_PORT=${VITE_PORT:-3000}
      - VITE_HOST=${VITE_HOST:-0.0.0.0}
      - VITE_MCP_SERVER_URL=${VITE_MCP_SERVER_URL:-http://mcp-server:8080}
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://192.168.111.200/api/mcp}
      - VITE_HMR_PORT=${VITE_HMR_PORT:-24678}
    depends_on:
      mcp-server:
        condition: service_healthy

  deployment-manager:
    build:
      context: ./mcp-cicd-pipeline/docker-enhanced/deployment
      dockerfile: Dockerfile
    container_name: deployment-manager
    volumes:
      - ./02_deployment_tools:/deployment_tools
      - ./deployment:/var/deployment
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - mcp-network
    restart: always
    # Security enhancements
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    cap_drop:
      - ALL
    cap_add:
      - DAC_OVERRIDE  # For Docker socket access
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "3"
        labels: "service=deployment-manager,environment=production"
    healthcheck:
      test: ["CMD", "python3", "-c", "import requests; requests.get('http://mcp-server:8080', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      mcp-server:
        condition: service_healthy
    environment:
      - MCP_SERVER_URL=http://mcp-server:${MCP_SERVER_PORT:-8080}
      - DEPLOYMENT_ENV=${DEPLOYMENT_ENV:-production}
      - LOG_LEVEL=${LOG_LEVEL:-info}

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
          gateway: 172.25.0.1

volumes:
  node_modules:
    driver: local
  nginx_logs:
    driver: local
  mcp_logs:
    driver: local