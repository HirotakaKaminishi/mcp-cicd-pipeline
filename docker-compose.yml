version: '3.8'

services:
  # React Application with Nginx
  react-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: react-nginx-app
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
      - REACT_APP_MCP_SERVER_URL=http://192.168.111.200:8080
    depends_on:
      - mcp-server
    networks:
      - mcp-network
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MCP Server API
  mcp-server:
    build:
      context: ./mcp-server
      dockerfile: Dockerfile
    container_name: mcp-api-server
    ports:
      - "8080:8080"
    environment:
      - PYTHONUNBUFFERED=1
      - FLASK_ENV=production
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - mcp-data:/root/mcp_project
      - mcp-containers:/root/mcp_containers
    networks:
      - mcp-network
    restart: unless-stopped
    privileged: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Monitoring (Optional)
  portainer:
    image: portainer/portainer-ce:latest
    container_name: mcp-portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      - mcp-network
    restart: unless-stopped

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mcp-data:
    driver: local
  mcp-containers:
    driver: local
  portainer-data:
    driver: local