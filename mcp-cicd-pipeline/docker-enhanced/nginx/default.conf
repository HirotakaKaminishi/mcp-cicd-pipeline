# Upstream backend definitions
upstream react_backend {
    server react-app:3000 max_fails=3 fail_timeout=30s weight=1;
    keepalive 32;
}

upstream mcp_backend {
    server mcp-server:8080 max_fails=3 fail_timeout=30s weight=1;
    keepalive 16;
}

# Main server configuration
server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html index.htm;

    # Security and performance enhancements
    client_max_body_size 10M;
    client_header_timeout 10s;
    client_body_timeout 10s;
    keepalive_timeout 65;
    send_timeout 60s;
    
    # Buffer settings
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;

    # MCP Server Proxy - Enhanced
    location /api/mcp/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://mcp_backend/;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Accept application/json;
        proxy_set_header Content-Type application/json;
        
        # Timeout and retry configuration
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        
        # CORS headers for MCP API
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
            add_header Access-Control-Max-Age 86400;
            return 204;
        }
    }

    # React App Proxy - Enhanced with WebSocket support
    location /app/ {
        proxy_pass http://react_backend/;
        proxy_http_version 1.1;
        
        # WebSocket support for Hot Module Replacement
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Enhanced timeout and retry settings
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        
        # Error handling
        error_page 502 503 504 /50x.html;
    }

    # Health check endpoints
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    location /service {
        access_log off;
        return 200 "service running\n";
        add_header Content-Type text/plain;
    }

    # Static files with enhanced caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        expires 7d;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status "STATIC";
        access_log off;
        
        # Fallback to React app for missing static files
        try_files $uri @react_fallback;
    }
    
    # React app fallback for static files
    location @react_fallback {
        proxy_pass http://react_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Main site - enhanced SPA support
    location / {
        limit_req zone=general burst=10 nodelay;
        try_files $uri $uri/ @index;
        
        # Security headers for all responses
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
    }
    
    # SPA fallback location
    location @index {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        try_files /index.html =404;
    }

    # Enhanced error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Enhanced security: Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~* \.(env|log|config|ini|sql|bak|backup|tmp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block common attack patterns
    location ~* /(wp-admin|wp-login|phpmyadmin|admin|administrator|manager|webmail|mail) {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }
}