version: '3.8'

services:
  mcp-server:
    build:
      context: ./docker-enhanced/mcp-server
      dockerfile: Dockerfile
    container_name: mcp-server
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/var/log/mcp
      - ./deployment:/var/deployment
    networks:
      - mcp-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - MCP_SERVER_PORT=8080
      - NODE_ENV=production

  nginx:
    build:
      context: ./docker-enhanced/nginx
      dockerfile: Dockerfile
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/html:/usr/share/nginx/html
      - ./logs/nginx:/var/log/nginx
    networks:
      - mcp-network
    restart: always
    depends_on:
      - mcp-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  react-app:
    build:
      context: .
      dockerfile: ./docker-enhanced/react-app/Dockerfile
    container_name: react-app
    ports:
      - "3000:3000"
    networks:
      - mcp-network
    restart: always
    environment:
      - NODE_ENV=development
      - VITE_MCP_SERVER_URL=http://mcp-server:8080
    depends_on:
      - mcp-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  deployment-manager:
    build:
      context: ./docker-enhanced/deployment
      dockerfile: Dockerfile
    container_name: deployment-manager
    volumes:
      - ./scripts:/app/scripts
      - ./deployment:/var/deployment
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - mcp-network
    restart: always
    depends_on:
      - mcp-server
    environment:
      - MCP_SERVER_URL=http://mcp-server:8080
    healthcheck:
      test: ["CMD", "ps", "aux"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

volumes:
  react_app_node_modules:
    driver: local
  nginx_logs:
    driver: local
  mcp_logs:
    driver: local